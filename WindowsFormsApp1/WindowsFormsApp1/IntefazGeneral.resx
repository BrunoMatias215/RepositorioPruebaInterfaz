<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAAVF0AAFRdAelPZVwAAAM1SURBVHhe7dSxDQBBDMOw33/p
        PK73BqIBptAA+e4OiJoRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgR
        aJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgR
        aJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgR
        aJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgR
        aJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgR
        aJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaJgRaHjHzKLz
        AMzC8wDMwvMAzMLzAMzC8wDMwvMAzMLzAMzC8wDMwvMAzMLzAMzC8wDMwvMAzMLzAMzC8wDMwvMAzMLz
        AMzC8wDMwvMAzMLzAMzC8wDMwnsPAIiaEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiY
        EWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiY
        EWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiY
        EWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiY
        EWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiY
        EWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiYEWiY
        EWiYEWiYEWiYEWiYEWiYEWiYESi47wc90xkPunFusQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7pAAAO6QEOM0IcAAAAB3RJ
        TUUH5AkNEgECVsxu6wAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABVkSURBVHhe
        7Z3XtiTFFUQZBuQ95gHzhcgCkjCvmIX5QUDSyPIFehNGsSHPTDPXtcmqyoyKvVawWHfu7a7MOhFd3Z2V
        54kl+frrr9EL0u+kP0lP87MQwlXwhnRferXpJX42JTrwexLmf1/6QvqP9Ib0Pan9VggB8ITEC+Rr0r+l
        L6WPJULgXvu1OeCApUPzF4TAn6XvS+23Q9g3eEHihRHz/0sq5gsBDlTC/O9Jh+YvSDdC4AdS+6sQ9gke
        kHhB5JL/n9LjEAIfSeOHAAco3Wb+ghDgM4EfSu2vQ9gX1L7EC+FN5i/GDwEOTHpRele6zfwFlzp/lH4k
        tUcJYR9Q8xIvgH+Q/iHdRYXAy9JYIcABSaeYvyD1CIEfS+3RQvCGWpd44cP8f5eOhRD4UCIEnmwPty0c
        iHSO+QtC4HXpJ1J71BA8ocYlXvB+L51i/mKcEOAApEvMX3AJRAj8VGqPHoIX1LbECx3mfyCdy/YhwBNL
        PcxfEAJ8DfIzqT1LCB5Q0xIvcCyKu8T8xXYhwBNKmP8dqYf5Cy6JCIGfS+3ZQpgbalkq8/9N6sX6IcAT
        SUuYv6gQ+IXUnjWEOaGGJa5qe5u/WC8EeAJpSfMXhADfjSYEwrRQuxJXs7+V/iotBSHwgbRcCPDA0hrm
        L3ifRAj8UmpHEcIcULMSL2BLm79YLgR4QGlN8xcVAr+S2tGEMDbUqrSm+Yv+bwd4IGkL8xeEAAsmEgJh
        eKhRiavW30h/kdamXwjwABLm7/VV37nw4Qkh8IzUji6EsaA2pS3NX1weAvrDc5f3LkWFwLNSO8oQxoCa
        lLhK3dr8xfkhoD8YzfwFIcAqKkLgXjvcEDZFtXho/s+kUTgMgeP8wi9KI5q/4EOVhEAYAtUg4q3pr6WR
        zF8cHwL8gsT9/KOav6gQeE5KCIRNUO2Nbv6CELh9PwH+QTpmM49RSAiEzVDNIa5CMf+n0ujcHAL8QJrJ
        /EVCIKyOam028xdXQ0D/gzD/4xt4zgIhwDrr56WEQFgU1dis5i8Igdpo9JsBzWz+gq9dEgJhUVRbs5u/
        eBgCDIjlijObvzgMgXbKQugDNSXxVnN28xeEwGsMip14Dvcinxk+iSXQciUQuqFaKvOP9j3/JdCj43UG
        Vq2IXEIgbwdCN1RDZf5XJIdXfqgGPU/VAJ+S7tqbfCYSAuFiVDuO5q/GPI/6dPI/Eq2Jjt2jfAYSAuFs
        VDOu5qchz9X+nPxAokVRQiDsGtWKo/l5i4/5b27Jxz+0X2BxzTl7lo9IQiAcjWrE0fzVgOfuVnz8QvtF
        QuCB5EBCINyJasPZ/Me34OMX2x8kBMIuUE0gh0U+h1TDndNb7/EH7Q8xzRLbGW9BQiBcQbXgbP7zW+7x
        h+0BEgLBEtWAo/mrt8blrfZ4gPZAa+9wuiS5izC4m79fiz0eSEoIBBt0zlFt5uFkfhb09e+vyQO2B04I
        hKnRuXY0/wMJ8y/XV5MHbk8wys6nPagQ4FKwjTS4wjmWZtjG6xQwPwv4lm+lxxO0J0oIhKng3Eoj7t57
        CWX+9Vro8URShYDLRKb5iDGcU8nN/FWz6/fP5AnbEycEwtBwLiXXWt2uZR5PLDGxTu+ntp/Y0A3OoeT2
        lpUa5S3r9jXKAbQDcQyB9S+tQjc4d1J16XX7vGqcq1QORKoQcPtaJSEwIZwziW+sHM0/3ofVHJDk+t3q
        8l+vhG5wriTXNSvjflPFgUmuIbDcAovQDc6R5Gh+7l8Z/2tqDlAiBJzuqe6/vjp0h3MjsWTd6ea1Mj+r
        VdtIB4cDlUirhEBYBc6J5Hrn6jzmLzhgqULgE8mBy++xDt3hXEjsXcF7ZN6yOTCv+QsOXHINgdN3WQnd
        4RxI7F6FWdzMz54VbaSTwgAktxBgnzVC4Ph91kJ3mHvJef/KNtLJYSASlzJuIXDcTquhO8y55LyDdRup
        CQxIcgsB9lonBG7eaz10h7mWqodFzD8LDExyDAEaLlCQbaRhKZhjybmLVRupKQxQcguB6rd2teVS6AZz
        K9HTjoVZjn0s20jNYaCSawjQaLWNNPSCOW1zG/M7wIAltxCg7fIb0v02zNAJzemTEguxHNvYt1HuDAYu
        uX1F+LmUEOiI5hLz88rPVZYDMX/BBEhuy4YTAp3QHNYrf8zvChMhuYVA3g5ciObO7bJ/vht71oIJkRxD
        4E0pIXAimrOYf28wMRIh4LKfwFdSQuBENFeYn6XWmJ85nJ2Y/1iYIMlpU5GEwAlojlzNzwtbG2W4FSZK
        cgsBPsR6S0oI3IDmBvOztNrJ/GNv4zUqTJjktNtwQuAWNCdlfhb5OJi/tu6O+c+FiZMSAuZoLlzNz1Vs
        G2U4CyZQcurqkhA4QHNwaP4vpdmJ+XvDREoVAiykmB0KnRB4W9ptCGjsjuZPV6klYEIlpxZPuw4BjdnN
        /OxIFPMvCRMrJQQmR2N1NX+6SC0NEyxVyye+ZpmdXYWAxoj52UDFyfzpHrUmTLTk1P1lFyGgsbm98rMd
        WbpGbQETLlUIODSCsA4BjcnR/NyrEPNvBRMvObWCsgwBjcXN/OxFiPnTJWprOAFStYRy2Bu+QsBinYDG
        4Gp+XnjaKMOmcCIkOvUkBAZCx+5mfsaR1nAjwgmR6NTj0ihi6hWDOmZX86cl3KhwYqRqFZUQ2AgdK+bH
        LJjGYW0/dycSZmkFNzqcIIlOPS6NIyoEpthPQMdY5ne5pbfMnxZws8CJkqp1FK9Cs4ORht9URMfmZn6C
        l0VLaf02G5wwiU49Lo0kKgSG3GhUx4T5aw8/F/PT6CUt32aFEydVKykKc3aGDAEdi5v5meO0enOAEyjR
        UooCJdUdGCYEdAyY3yVgoXo6pMWbC5xIqQrVJQQ2LVSeU7ovOQXrw4YuUhtpsEEn9fBS1YEqWN7mtFEu
        D88l1VWVy1wO+/lK6IhOcN6vXgDPIeVzlTAvOtFuIVBfVy36iTWPLTl+s5KeDXtDJ5wQyHfWR8JjSrW2
        wmWBVcy/Z3Ti3UKAcXRftcZjtcfM6srghQqAEKibVpxCoMu6dR6jPVburwieqBAOQyB3rjX4WynmD/6o
        IFxD4Kx71/kbKXsshP2gwnALgbN2r+F3peyyFPaHCsQ1BI7av47fkbLPYtgvKhS3EOD9O9/d37qDLf8m
        ZaflEFQwriFwbQMLfial4UoIhQqHELDvYsP/SzF/CI+jAnK7EiAEHvaxa0q/xRBuQoXkGgJ0sk3b9RDu
        QgVVIcBKO4cQ4EM+7oBjTDF/CHdBYUmsH3cJgf82zU7W9od1UIEdvh1wuHdgdrK8N6yLCi0hMAYxf9gG
        FRwh4HQr8WzE/GFbVHgJgW1grrOZR9geFWBCYF1i/jAWKkRCwGmH3JHJBp5hPFSQCYHlifnDuKgwCQHW
        2vPhVOjLw6YdbbpDGA8VaK4E+hPzh3mgUKWEQB/qsv+pNr0hjI2KFdE6y6WBxlbwVoquR6u2PgvhYijY
        VriEgMNe+muD+dmLIS26w5xQuK2AXRpqrAVvnRZvdRbC4lDArZAJAYe99ZcG83OfxSItzkJYHQpZorWW
        S4ONpeDzEszftbVZCJtDQUvVZcdhr/3eYH6WVHdpaRbCcFDYrcBdGm70gs9HMP9FrcxCGB4KvBW6S+ON
        S6nGJWe1MAthOij0VvB7DwE+D8H8J7UuC2F6KPhW+C578Z9KNSo5qmVZCHZQ+M0AewuBalBya6uyEOzB
        AM0IhIDD9tx3Uea/tkVZCLsDI0iEgEuDjpuohiQxfwiHYIhmDNcQ4MPOhy3JQgiPgTGaQVgN59Cwo2As
        3NJLK7I22hDCd8AcUgIghL2BMaS8BQhhb2AIKR8ChrA3MIKUrwFD2BsYQMpCoBD2BoUvZSlwlgKHvUHB
        S7kZKDcDhb1BoUu5HfgRuR047AMKXMqGIFfJhiDBGwpbypZgN5MtwYInFLSUTUHvJpuCBi8oZCnbgh9P
        tgUPHlDAUhqDnE4ag4S5oXCltAY7n7QGC3NCwUppDno5aQ4a5kPFmvbg/Uh78DAPKtQnpZi/L59LhMD9
        Ns0hjIcKFPNz2c+la+hLQiCMiwozr/zLU28HEgJhHFSQMf96JATCOKgQMT9LWDH/V1JYFuaYEHhTSgiE
        7VABxvzbkBAI26LCi/m3hTnnw9a3pIRAWA8VHOZnvTqLfGL+7UgIhHVRocX8Y5EQCOtAgUm87+Sy/0tp
        dmjY4dCApEIgnwmEZVBh1Su/i/nZjox19nyO4bAdOeeEEHhbSgiEfqigDi/7HcxfDTpo1UWnHpeGJAmB
        0BcVkqv5v2nR1eTUkiwhEPqgAsL83JPuZH7uVfhOVx7+X6ruRA49ChIC4TJUOG6v/NWI49qWXPxMSgiE
        oIJxNf+trbj4N6lalTn0LEgIhNNQobiZvxpvHNWCi9+R6NTj0rgkIRCOQwXiav6TWm/xu1K1LnPoYVAh
        kMVC4XpUGG7mZxx8x39Wyy3+RqoWZgmB4IsKwtX8F7Xa4m+l6mbk0NMgy4bDd1EhHJrfYW0/KxUZT5cW
        WzxGe6yEQPBCBYD5nW7pLfN3ba3FY7XHdGlwknsH9o5OvJv5KWgWLS3SUovHlKrFmUsIZFORPaITjvlr
        Dz8n8y/aSovHlujU49LwJCGwN3Si3cxPAXNX3yottHgOqVqeMYezUyGQjUbd0Qk+NL8DtVf+qq2zeC6J
        1mdOc5kQcEUntczPqxaXyw6U+TFiG+l68JxStUBzm1PG1UYapoYTKdWrlUuhDvNqpWOoYHW7qtokWENH
        OIFS3q8ujI4ln6uEseDEtRPo9on1UOYvdExuIcDVIiGw6DcrYQE4Ye3E8Z11vq5aCR0bIZC1FWE7OFHt
        hGXV2gboGN1CgHF0X10ZFoAT1E5U1q1viI61QiD3V4R14MS0ExTzD4COmRCom6xyh2VYDk5IOzG5d30g
        dOyuIXDWHgthATgR7YTE/AOiMbiFAJ8rEQJHbbEWFoQTINX+dU7mt9q/TmNxDAG+8kwIbAUT304A5s/m
        lYOjMbmFAJ8zEQK37rQcFoAJl7J99WRobI4hwEKza3sthAVgoqU0sJgUjZEQcOy29E2rtbAgTLBE2sb8
        E6Oxul0JJASWhomVyvxpYjk5GrNjCLD6lI7LbZShC0yolDbWZmjsbiHA51GEwDNSG2W4CCZSIlVdzD/1
        Cr/eaA4SAuF6mECpzP+ZNDsx/zVoLg5DwOHegQqBZ6U2ynASTJxEisb8O0Bz4hgC3JdCCNxrwwzHoAkr
        8/9aivl3guamQsDlVmK+qSIEnpMSAsegiXI0//CbeYyC5ogQcNpPICFwLJogxCUT5v9Ump2Y/ww0VwmB
        vaGJcTM/xPxnojkjBGqPQQcqBJ6XEgKHaEJczT/kBp6zoLlzDAFuXksIFJoIR/M/bDDRhhnORHNYIcCH
        qA6wliUhAJoAxPuimD/ciOaSEGCtfULABQ28zP+KlMv+cCuaU7e3A/sNAQ3Y0fy8OtFIIi2lFoA5bXPr
        0ugF9hcCGqiz+dNKakGYW6lavSUEZkMDdDQ/l6RscJEWUivAHEsErUvjF/APAQ3M1fwsXU3rqBVhrqVq
        /ebQAwJ8Q0ADcjQ/l6CYPy2jNoA5lwheFtckBEZFAynzO33Vh/lZqppWURvC3EvVCu6B5IBPCGgAyG2R
        TzWGSIuoAeAcSAQxpkkIjIIO3NX8fBed1lADwbmQqjWcwzbxMG8I6IAdzV+NIOhE1EYaRoFzIlWLOLcQ
        4C30HCGgA3U2f1pBDQznRiKgXbaNh3luJdYBotrMw8X8vK9k4UlaQE0A50iqrlEJgbXQgcX8YQg4V1KF
        AJfRDlQIcHU9VgjogBC792J+h228APOz0CR93yaEcyYR3C7bycNhCLSRbgwHIjlt3Q21rXNaPU0M504i
        wBMCS8ABSNWxx838afFkAOdQqhBwq1HecreRrgxPLDm16wImlnSN+Y3gXEp5oeoFTyi5XVqV+bdL1bAY
        nFOJEHD6nGr9EOCJJKcuvVDvq2J+Yzi3EmZx/KZq+c+reAKJT1Ydv2Md55PVsBicY8k1BJb7xooHlhwX
        WLDUMubfEZxryXXNSv8Q4AElllhilpg/TA/nXHILgVqy3m/hGg8klfn50MGBMj9LK9tIw97g3Eu8ADht
        VNPvvhUeQHK+w6qNNOwVakByDYHz71zlDyXuseYDMt5fOBDzhytQC1KFwCeSA7Vxzel7V/AHErusOJqf
        DRbaSEP4FmpCcg2B43ev4hcl9lljgQGXEg7E/OFOqA3JLQRq89q796/kFyR2Wo35wy6hRiTeIjqGwM07
        WPMPEnut812iY8OFNtIQbodakdxCoBrYXO1hwQ8kuq1gfseWS22kIRwHNSO5hUC1sHvUxYr/kei3xtcG
        MX8IDWpHcg2Bb/tY6j/3Jczv2Ha5ncoQzoMaktxCoNrYP83g+JqAVHCA2zy5VyHmD92gliRCwGk/AULg
        dQaGYb7gJ5PDKz9j4US1UxdCH6ipVlvcO+BwJfCl9CqDekF6X5o5BHLZHxaH2pIclg1j/o+lF2tQhMB7
        0owhkBt7wmpQY9LMIYD5P5Jekh4O6p40YwjE/GF1qDVpxhA4NP+9Npxv4QfSTCEQ84fNoOakmfYTwPwf
        SlfNX/APEiHwrjRyCGD+bOMVNoXak2YIgbvNX/AL0ovSqCEQ84dhoAalCoERvyI83vwFvyiNGAK1dXfM
        H4aBWpRqo9GRQgDzfyAdb/6CP5AIgXekEUIg+/aHYaEmpZFC4ND8T7bDPA3+UKoQ+J+0Fes3QAjhRKhN
        aYQORGX+l6XzzF/wANKWIfBAivnDFFCj0pYt8/qZv+CBpC1CoMy/fNeTEDpBrUpbtM7rb/6CB5TWDIGY
        P0wLNStVCPDN1dIsZ/6CB5bWCAG2I1u21VEIC0PtSmu00lve/AVPIC0ZAmX+ft1NQtgIalhasqXeeuYv
        eCJpiRCohgaXdzUJYRCoZYkmHYRAzwY765u/4AmlCoEe6wTYiDTmD5ZQ01LPFnvbmb/giaUeIVANDM5v
        ZRTC4FDbUrXa40Puc9ne/AUHIBEC5y4bZiPS81oYhTAZ1Lh0Scu9Mv/5K/x6owM5996BalhwfOuiECaH
        Wpeq9d4pDXgwf93YM4b5Cx3QqSHALsTHtSwKwQxqXqJTDyFwTCOeQ/Pfaw8zFhyYdMymIuxCTJeSm1sV
        hWAOtS9VK77bQmB88xccoHRbCJT5r7YoCmFn4AGJTj2EwHWNeTD/9dt4jQoHKl0XAuxF/qgrSQihQqBa
        8x026JnP/AUHLBECteV4mZ82ZO23QgiAJ6SnpAoBzM/W3fOZv9CBI0KA7z35qo8Btn8NIRyCN5pH8Aqe
        wTvtX5fgiSf+DyPu347alCY9AAAAAElFTkSuQmCC
</value>
  </data>
</root>